# Default properties
spring:
  messages:
    basename: i18n.i18n

server.compression.enabled: true
server.compression.mime-types: # text/* */*+json */*+text */*+xml are compressed by the approuter
  - multipart/mixed

# enable health checks
management:
  endpoints:
    web:
      exposure:
        exclude: info # disable info endpoint
        include: health
    jmx:
      exposure:
        exclude: '*' # disable all jmx endpoints
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
      show-details: never
    info:
      enabled: false
  health:
    db:
      enabled: true

cds.multiTenancy.security.subscriptionScope: Callback
cds.multiTenancy.security.deploymentScope: InitDb
cds.multitenancy.datasource.hikari:
  registerMbeans: true # Required for JMX/Dyntrace monitoring.
  leakDetectionThreshold: 2000
  connectionTimeout: 20000 # Needs to be lower than the health check timeout at AvS. Compare https://github.wdf.sap.corp/cap/issues/issues/8103#issuecomment-3098670
  maxLifetime: 900000 # (15 minutes) Has to be smaller than timeout on HANA Cloud (which defaults to 24h). Recommended to be configured explicitly as per https://github.com/brettwooldridge/HikariCP.
  minimumIdle: 1 # Each Tenant has its own connection pool with at max maximumPoolSize (default 10) connections. If minimumIdle is unspecified, it will be exactly 10 connections per tenant, which wastes resources.
  idleTimeout: 300000 # (5 minutes) Time for idle connections to stay alive if unused. If exceeded, the connection will be closed, reducing the pool size down to minimumIdle. Has to be configured if minimumIdle != maximumPoolSize.
#Instance based authorizations
cds.security.instance-based-authorization.enabled: true

---
spring:
  config:
    activate:
      on-profile: default
  sql:
    init:
      mode: always
  datasource:
    url: 'jdbc:sqlite:file::memory:?cache=shared'
    driver-class-name: org.sqlite.JDBC

---
spring:
  config:
    activate:
      on-profile: cloud

cds:
  security.openUnrestrictedEndpoints: false # authenticate all endpoints by default
  odata-v4.index-page.enabled: false # disable / index page

resourcerequest:
  logging:
    rootlevel: INFO

# Mockuser configuration for local profiles
---
spring:
  config:
    activate:
      on-profile: default | local-test
  sql:
    init:
      mode: always
  datasource:
    url: 'jdbc:sqlite:file::memory:?cache=shared'
    driver-class-name: org.sqlite.JDBC
    hikari:
      maximum-pool-size: 1

  schema:
    - classpath:schema.sql

cds:
  security:
    xsuaa:
      enabled: false
    mock:
      enabled: true
      users:
        - name: ProjectManager
          password: pass
          roles:
            - RsceReq.Edit
          attributes:
            RequestedResourceOrganization: ['RORG1', 'RORG2', 'RORG3', 'RORG4']
        - name: ResourceManager
          password: pass
          roles:
            - Asgt.Edit
          attributes:
            ProcessingResourceOrganization: ['RORG1', 'RORG2', 'RORG3', 'RORG4']
        - name: admin-user
          password: pass
          roles:
            - Demand.Edit
            - System
        - name: opaUser
          password: pass
          roles:
            - RsceReq.Edit
            - Asgt.Edit
          attributes:
            RequestedResourceOrganization: ['RORG1', 'RORG2', 'RORG3', 'RORG4']
            ProcessingResourceOrganization: ['RORG1', 'RORG2', 'RORG3', 'RORG4']
  datasource:
    csvPaths:
      - ../../db/csv/**
      - ../tests/ui-integration/test-data/csv
resourcerequest:
  logging:
    rootlevel: INFO
    appender: STDOUT

# Default properties
spring:
    profiles:
        active: local
    messages:
        basename: i18n.i18n
        always-use-message-format: true
    servlet:
        multipart:
            max-file-size: 10MB
            file-size-threshold: 10MB
    mvc:
        async:
            request-timeout: 30m # Request timeout for asynchronously processed file download

server.compression.enabled: true
server.compression.mime-types: # text/* */*+json */*+text */*+xml are compressed by the approuter
 - multipart/mixed

# Enable health checks
management:
    endpoints:
        web:
            exposure:
                exclude: info # disable info endpoint
                include: health
        jmx:
            exposure:
                exclude: "*" # disable all jmx endpoints
        enabled-by-default: false
    endpoint:
        health:
            enabled: true
            show-details: never
        info:
            enabled: false

cds.multiTenancy.security.subscriptionScope: Callback
cds.multiTenancy.security.deploymentScope: InitDb
cds.errors:
    stackMessages.enabled: false
    combined: false # disable CAP default validations using the messaging API until they are targeting the affected fields
cds.multitenancy.datasource.hikari:
    registerMbeans: true # Required for JMX/Dyntrace monitoring.
    leakDetectionThreshold: 2000
    connectionTimeout: 20000 # Needs to be lower than the health check timeout at AvS. Compare https://github.wdf.sap.corp/cap/issues/issues/8103#issuecomment-3098670
    maxLifetime: 900000 # (15 minutes) Has to be smaller than timeout on HANA Cloud (which defaults to 24h). Recommended to be configured explicitly as per https://github.com/brettwooldridge/HikariCP.
    minimumIdle: 1 # Each Tenant has its own connection pool with at max maximumPoolSize (default 10) connections. If minimumIdle is unspecified, it will be exactly 10 connections per tenant, which wastes resources.
    idleTimeout: 300000 # (5 minutes) Time for idle connections to stay alive if unused. If exceeded, the connection will be closed, reducing the pool size down to minimumIdle. Has to be configured if minimumIdle != maximumPoolSize.

# Local development profile with an in-memory database, mock users, and csv data
# Profiles and their purpose
# local:       Profile to run the application locally with No CF information.
# local-int-test:   Profile to run the application locally with CF information.
# integration-test: Profile to run the integration while mocking remote calls only.
# cloud:             Profile to run the application at cloud foundry
---
spring:
    config:
        activate:
            on-profile: local|local-int-test|integration-test
    sql:
        init:
            mode: always
            schema-locations:
              # Schema generated by CAP
              - classpath:schema.sql
              # Custom schema including native artifacts
              - classpath:custom-schema.sql
    datasource:
        url: "jdbc:sqlite:file::memory:?cache=shared"
        driver-class-name: org.sqlite.JDBC
        hikari:
            maximum-pool-size: 1
            maxLifetime: 0

# Advanced insights for local startup with Spring Tools 4 needs jmx
management:
    endpoints:
        enabled-by-default: true
        jmx:
            exposure:
                exclude:
skill:
    logging:
        rootlevel: INFO
        appender: STDOUT

APPLICATION_URL: dummyApplicationUrl.com

cds:
    security:
        xsuaa:
            enabled: false
        mock:
            enabled: true
            users:
                - name: ConfigurationExpert
                  password: pass
                  roles:
                      - Skills.Edit
                      - Skills.Delete
                      - Skills.Upload
                      - Skills.Download
                      - SkillCatalogs.Edit
                      - SkillCatalogs.Delete
                      - Proficiencies.Edit
                      - Proficiencies.Delete
                      - DefaultLanguage.Edit
                      - JobScheduler
                      - ReplicationSchedules.Edit
                - name: authenticated-user
                  password: pass
                  roles:
                    - Skills.Edit
                    - Skills.Delete
                    - Skills.Upload
                    - Skills.Download
                    - SkillCatalogs.Edit
                    - SkillCatalogs.Delete
---
spring:
  config:
    activate:
      on-profile: local
cds:
    datasource:
        csvPaths:
            - ../../db/csv/**
            - ../tests/ui-integration/test-data/**

---
spring:
  config:
    activate:
      on-profile: integration-test
cds:
    datasource:
        csvPaths:
            - ../../db/csv/**


# Productive profile to be used when running on Cloud Foundry
---
spring:
    config:
        activate:
          on-profile: cloud
    main:
        banner-mode: off # Disable startup banner in the cloud

cds:
  security.openUnrestrictedEndpoints: false # authenticate all endpoints by default
  odata-v4.index-page.enabled: false # disable / index page
